
################################
## Cluster Configuration File ##
################################

[cluster OnDemand]
FormLayout = selectionpanel
Category = Application
IconUrl = "https://github.com/OSC/openondemand.org/blob/gh-pages/assets/images/ood_logo_stack_rgb.png?raw=true"

Autoscale = false

    [[node defaults]]
    UsePublicNetwork = false
    Credentials = $Credentials    
    ImageName = $ImageName
    SubnetId = $SubnetId
    Region = $Region
    KeyPairLocation = ~/.ssh/cyclecloud.pem
    Azure.Identities = $ManagedServiceIdentity
    
        [[[configuration]]]
        # For fast spin-up after Deallocate, force an immediate re-converge on boot
        cyclecloud.converge_on_boot = true

        # Disable normal NFS exports and mounts
        cyclecloud.mounts.sched.disabled = true
        cyclecloud.mounts.shared.disabled = true
        cyclecloud.exports.sched.disabled = true
        cyclecloud.exports.shared.disabled = true
        cyclecloud.exports.sched.samba.enabled = false
        cyclecloud.exports.shared.samba.enabled = false
        cyclecloud.exports.defaults.samba.enabled = false      
        cshared.server.legacy_links_disabled = true
        ondemand.auth.AuthType = $AuthType
        ondemand.auth.oidcAAD.ClientID = $ClientID
        ondemand.auth.oidcAAD.ClientSecretName = $ClientSecretName
        ondemand.auth.oidcAAD.MetadataURL = $MetadataURL
        ondemand.ssl.SSLType = $SSLType
        ondemand.ssl.certificateName = $certificateName
        ondemand.ssl.certificateKeyName = $certificateKeyName
        ondemand.portal.ip = $PortalIP
        ondemand.portal.serverName = $PortalName
        ondemand.portal.extraConfiguration = $extraConfiguration
        ondemand.scheduler.type = $schedulerType
        ondemand.scheduler.host = $schedulerHost
        ondemand.scheduler.version = $schedulerVersion
        ondemand.keyVaultName = $AzureKeyVaultName

        [[[cluster-init cyclecloud/ondemand:default]]]
        Optional = false

        [[[configuration cyclecloud.mounts.nfs_shared]]]
        type = nfs
        mountpoint = /shared
        export_path = $NFSSharedExportPath
        address = $NFSAddress
        options = $NFSSharedMountOptions

        [[[configuration cyclecloud.mounts.nfs_sched]]]
        type = nfs
        mountpoint = /sched
        disabled = $NFSSchedDisable

        [[[configuration cyclecloud.mounts.additional_nfs]]]
        disabled = ${AdditionalNAS isnt true}
        type = nfs
        address = $AdditonalNFSAddress
        mountpoint = $AdditionalNFSMountPoint
        export_path = $AdditionalNFSExportPath
        options = $AdditionalNFSMountOptions


    [[node server]]
    ImageName = $SchedulerImageName
    MachineType = $serverMachineType
    AdditionalClusterInitSpecs = $serverClusterInitSpecs
    
        [[[configuration]]]
        cyclecloud.mounts.nfs_sched.disabled = true
        cyclecloud.mounts.nfs_shared.disabled = false
        
        [[[network-interface eth0]]]
        AssociatePublicIpAddress = false
        PrivateIp = $PortalIP

        [[[input-endpoint ganglia]]]
        PrivatePort = 8652
        PublicPort = 8652

        [[[volume ood]]]
        Size = 64
        SSD = True
        Mount = /ood
        Persistent = True

[parameters About]
Order = 1

    [[parameters About Open OnDemand]]

        [[[parameter pbspro]]]
        HideLabel = true
        Config.Plugin = pico.widget.HtmlTemplateWidget
        Config.Template = '''<table role="presentation"> <img width="512" alt="OnDemand logo" src="https://github.com/OSC/openondemand.org/blob/gh-pages/assets/images/ood_logo_stack_rgb.png?raw=true"> </a>  </td></tr> 
                                <tr> <td> <p>&nbsp;</p> </td></tr> 
                                <tr><td><big><b>Thank you for using Open On Demand! </big> </b></td></tr> 
                                <tr><td><p><b>Open OnDemand</b> empowers students, researchers, and industry professionals with remote web access to supercomputers.</p>
                                         </td></tr> 
                                         <tr> <td> <p>&nbsp;</p> </td></tr> 
                                         <tr><td> <p> <big><b><a href=\"https://openondemand.org/\" target=\"_blank\">OnDemand project site</a> for an overview. </big> </b></p></td></tr> 
                                         <tr><td><ul>
                                            </ul> </td></tr></table>'''

[parameters Required Settings]
Order = 10

    [[parameters Virtual Machines ]]
    Description = "The cluster, in this case, has two roles: the scheduler server-node with shared filer and the execute hosts. Configure which VM types to use based on the requirements of your application."
    Order = 20

        [[[parameter Region]]]
        Label = Region
        Description = Deployment Location
        ParameterType = Cloud.Region

        [[[parameter serverMachineType]]]
        Label = Server VM Type
        Description = The VM type for scheduler server and shared filer.
        ParameterType = Cloud.MachineType
        DefaultValue = Standard_D8as_v4

    [[parameters Networking]]
    Order = 40

        [[[parameter SubnetId]]]
        Label = Subnet ID
        Description = Subnet Resource Path (ResourceGroup/VirtualNetwork/Subnet)
        ParameterType = Azure.Subnet
        Required = True

[parameters Network Attached Storage]
Order = 15


    [[parameters Scheduler Mount]]
    Order = 5
        [[[parameter About sched]]]
        HideLabel = true
        Config.Plugin = pico.widget.HtmlTemplateWidget
        Config.Template = ''' <p>The directory <code>/sched</code> is a network attached mount and exists in all nodes of the cluster. 
            It's managed by the scheduler node. 
            To disable the mount of the /sched directory, and to supply your own for a <strong>hybrid scenario</strong>, select the checkbox below.'''
        Order = 6

        [[[parameter NFSSchedDisable]]]
        HideLabel = true
        DefaultValue = false
        Widget.Plugin = pico.form.BooleanCheckBox
        Widget.Label = External Scheduler

    [[parameters Default NFS Share]]
    Order = 10
        [[[parameter About shared]]]
        HideLabel = true
        Config.Plugin = pico.widget.HtmlTemplateWidget
        Config.Template := "<p>The directory <code>/shared</code> is a network attached mount and exists in all nodes of the cluster. Users' home directories reside within this mountpoint with the base homedir <code>/shared/home</code>.<br><br>There are two options for providing this mount:<br> <strong>[Builtin]</strong>: The scheduler node is an NFS server that provides the mountpoint to the other nodes of the cluster.<br> <strong>[External NFS]</strong>: A network attached storage such as Azure Netapp Files, HPC Cache, or another VM running an NFS server, provides the mountpoint.</p><p>Note: the cluster must be terminated for this to take effect.</p>"
        Order = 20

        [[[parameter NFSType]]]
        Label = NFS Type
        ParameterType = StringList
        Config.Label = Type of NFS to use for this cluster
        Config.Plugin = pico.form.Dropdown
        Config.Entries := {[Label="External NFS"; Value="External"]}
        DefaultValue = External

	[[[parameter NFSDiskWarning]]]
	HideLabel = true
        Config.Plugin = pico.widget.HtmlTemplateWidget
        Config.Template := "<p><b>Warning</b>: switching an active cluster over to NFS will delete the shared disk.</p>"
        Conditions.Hidden := NFSType != "External"

        [[[parameter NFSAddress]]]
        Label = NFS IP Address
        Description = The IP address or hostname of the NFS server. Also accepts a list comma-separated addresses, for example, to mount a frontend load-balanced Azure HPC Cache.
        Config.ParameterType = String
        Conditions.Hidden := NFSType != "External"

        [[[parameter NFSSharedExportPath]]]
        Label = Shared Export Path
        Description = The path exported by the file system
        DefaultValue = /shared
        Conditions.Hidden := NFSType != "External"

        [[[parameter NFSSharedMountOptions]]]
        Label = NFS Mount Options
        Description = NFS Client Mount Options
        Conditions.Hidden := NFSType != "External"

        [[[parameter FilesystemSize]]]
        Label = Size (GB)
        Description = The filesystem size (cannot be changed after initial start)
        DefaultValue = 100

        Config.Plugin = pico.form.NumberTextBox
        Config.MinValue = 10
        Config.MaxValue = 10240
        Config.IntegerOnly = true
        Conditions.Excluded := NFSType != "Builtin"

    [[parameters Additional NFS Mount]]
    Order = 20
        [[[parameter Additional NFS Mount Readme]]]
        HideLabel = true
        Config.Plugin = pico.widget.HtmlTemplateWidget
        Config.Template := "<p>Mount another NFS endpoint on the cluster nodes.</p>"
        Order = 20

        [[[parameter AdditionalNAS]]]
        HideLabel = true
        DefaultValue = false
        Widget.Plugin = pico.form.BooleanCheckBox
        Widget.Label = Add NFS mount

        [[[parameter AdditonalNFSAddress]]]
        Label = NFS IP Address 
        Description = The IP address or hostname of the NFS server. Also accepts a list comma-separated addresses, for example, to mount a frontend load-balanced Azure HPC Cache.
        Config.ParameterType = String
        Conditions.Excluded := AdditionalNAS isnt true

        [[[parameter AdditionalNFSMountPoint]]]
        Label = NFS Mount Point
        Description = The path at which to mount the Filesystem
        DefaultValue = /data
        Conditions.Excluded := AdditionalNAS isnt true

        [[[parameter AdditionalNFSExportPath]]]
        Label = NFS Export Path
        Description = The path exported by the file system
        DefaultValue = /data
        Conditions.Excluded := AdditionalNAS isnt true

        [[[parameter AdditionalNFSMountOptions]]]
        Label = NFS Mount Options
        Description = NFS Client Mount Options
        Conditions.Excluded := AdditionalNAS isnt true
    
[parameters OnDemand Portal]
Order = 17

    [[parameters Portal]]
        Order = 2
        [[[parameter PortalIP]]]
        ParameterType = String
        Label = Portal IP
        Description = The private IP address to be assigned to Open OnDemand Potal
        Required = true
        Order = 3

        [[[parameter PortalName]]]
        ParameterType = String
        Label = Server Name
        Description = The OnDemand portal server name, ideally the FQDN
        Required = true
        Order = 4
        
        [[[parameter extraConfiguration]]]
        ParameterType = Text
        Label = Extra configuration
        Description = Extra configuration to concatenate to OnDemand YML configuration file
        Order = 5

    [[parameters Secrets Configuration]]
        Order = 15
        [[[parameter About Managed Identity]]]
        HideLabel = true
        Config.Plugin = pico.widget.HtmlTemplateWidget
        Config.Template = ''' <p> The Managed Identity will be used during configuration to retrieve secrets from the target Azure Key Vault. 
            '''
        Order = 16

        [[[parameter ManagedServiceIdentity]]]
        ParameterType = Azure.ManagedIdentity
        Label = MSI Identity
        Description = The Azure user assigned managed identity to access the Azure Key Vault secret and certificate. Make sure it has 'Get' Permission of the Azure Key vault secret and certificate. The identity will be applied to all nodes.
        Required = true
        Order = 17

        [[[parameter AzureKeyVaultName]]]
        ParameterType = String
        Label = Vault Name
        Description = Azure Vault Name containing the secrets
        Required = true
        Order = 18


    [[parameters Authentication]]
        
        Order = 19
        [[[parameter About Authentication]]]
        HideLabel = true
        Config.Plugin = pico.widget.HtmlTemplateWidget
        Config.Template = ''' <p> Authentication for OnDemand portal can be based on Basic Apache auth (using PAM) or on OIDC. In production, it is strongly suggested to avoid Basic authentication.
            OIDC authentication can bind to a LDAP server through Dex or directly to an OIDC provider 
            '''
        Order = 20

        [[[parameter AuthType]]]
        Label = Authentication Type
        ParameterType = StringList
        Config.Label = Type of authentication to use in the portal
        Config.Plugin = pico.form.Dropdown
        Config.Entries := {[Label="Basic"; Value="basic"], [Label="OIDC AD"; Value="oidc_ad"]}
        DefaultValue = basic
        Order = 21


        [[[parameter AuthType]]]
        Label = Authentication Type
        ParameterType = StringList
        Config.Label = Type of authentication to use in the portal
        Config.Plugin = pico.form.Dropdown
        Config.Entries := {[Label="Basic"; Value="basic"], [Label="OIDC AAD"; Value="oidc_aad"]}
        DefaultValue = basic
        Order = 22

        [[[parameter ClientID]]]
        Label = Client ID
        Description = OIDC Application ID in Azure Active Directory
        DefaultValue = ""
        Conditions.Excluded := AuthType != "oidc_aad"
        Required = AuthType == "oidc_aad"
        Order = 23

        [[[parameter ClientSecretName]]]
        Label = Secret Name
        Description = Client Secret Name in Azure Key Vault
        DefaultValue = ""
        Conditions.Excluded := AuthType != "oidc_aad"
        Required = AuthType == "oidc_aad"
        Order = 24

        [[[parameter MetadataURL]]]
        Label = Metadata URL
        Description = Metadata URL
        DefaultValue = "https://login.microsoftonline.com/{tenant_id}/v2.0/.well-known/openid-configuration"
        Conditions.Excluded := AuthType != "oidc_aad"
        Required = AuthType == "oidc_aad"
        Order = 25
  
    [[parameters SSL Configuration]]
        
        Order = 32
        [[[parameter About SSL]]]
        HideLabel = true
        Config.Plugin = pico.widget.HtmlTemplateWidget
        Config.Template = ''' <p> Select how to enforce SSL in the portal. The self-signed option can be used for testing, but moving to production, an SSL Cert from a relevant CA must be 
           configured in the portal and placed in the Azure Key Vault
            '''
        Order = 33

        [[[parameter SSLType]]]
        Label = SSL Type
        ParameterType = StringList
        Config.Label = Type of SSL to be used for Portal
        Config.Plugin = pico.form.Dropdown
        Config.Entries := {[Label="Self-signed"; Value="self_signed"], [Label="From Azure Key Vault"; Value="keyvault"]}
        DefaultValue = self_signed
        Order = 34

        [[[parameter certificateName]]]
        Label = Certificate Name
        Description = Certificate name in Azure Key Vault
        DefaultValue = ""
        Conditions.Excluded := SSLType == "self_signed"
        Required = SSLType != "self_signed"

        
        [[[parameter certificateKeyName]]]
        Label = Certificate Key Name
        Description = Certificate key name in Azure Key Vault
        DefaultValue = ""
        Conditions.Excluded := SSLType == "self_signed"
        Required = SSLType != "self_signed"


[parameters Scheduler]
Order = 18

    [[parameters Scheduler Definition]]
        Order = 10
        [[[parameter schedulerType]]]
        Label = Scheduler Type
        ParameterType = StringList
        Config.Label = Type of the scheduler
        Config.Plugin = pico.form.Dropdown
        Config.Entries := {[Label="OpenPBS"; Value="pbs"]}
        DefaultValue = pbs

        [[[parameter schedulerHost]]]
        ParameterType = String
        Label = Scheduler host 
        Description = Scheduler host
        Required = true
        Order = 14

        [[[parameter schedulerVersion]]]
        Label = Scheduler Version
        ParameterType = StringList
        Config.Label = Version of the scheduler
        Config.Plugin = pico.form.Dropdown
        Config.Entries := {[Label="18.1.4"; Value="18.1.4"]}
        DefaultValue = 18.1.4

[parameters Advanced Settings]
Order = 20

    [[parameters Azure Settings]]
    Order = 10 

        [[[parameter Credentials]]]
        Description = The credentials for the cloud provider
        ParameterType = Cloud.Credentials

    [[parameters Software]]
    Description = "Specify the scheduling software, and base OS installed on all nodes, and optionally the cluster-init and chef versions from your locker."
    Order = 10


        [[[parameter SchedulerImageName]]]
        Label = Scheduler OS
        ParameterType = Cloud.Image
        Config.OS = linux
        DefaultValue = OpenLogic:CentOS-HPC:7_9-gen2:7.9.2022040101
        Config.Filter := Package in {"OpenLogic:CentOS-HPC:7_9-gen2:7.9.2022040101"}

        [[[parameter serverClusterInitSpecs]]]
        Label = Server Cluster-Init
        DefaultValue = =undefined
        Description = Cluster init specs to apply to the server node
        ParameterType = Cloud.ClusterInitSpecs


       